#!/bin/bash

if [ -n "$ORK_SOURCED" ]; then return 0; fi
export ORK_SOURCED=1

# ascii tbd
_executor="$(echo $0 | awk -F '/' '{ print $NF }')"

# orkhideya needs to be sourced to work properly
if [ "$_executor" == "orkhideya"  ]; then
   echo "$_executor: not being sourced" 1>&2
   exit 1
fi

# the root of the orkhideya installation
ORK_ROOT="/usr/local/lib/orkhideya"

# modify these variables if you care a lot more about where things go
ORK_ETC="etc"
ORK_INCLUDE="include"
ORK_BIN="bin"

# allow the user to override these variables, but prefer a system-wide solution
if [ -r "/etc/orkhideya" ]; then
   source /etc/orkhideya
elif [ -r "$HOME/.orkhideya" ]; then
   source $HOME/.orkhideya
fi

if [ "${ORK_ETC:0:1}" != "/" ]; then
   ORK_ETC="$ORK_ROOT/$ORK_ETC"
fi

if [ "${ORK_INCLUDE:0:1}" != "/" ]; then
   ORK_INCLUDE="$ORK_ROOT/$ORK_INCLUDE"
fi

if [ "${ORK_BIN:0:1}" != "/" ]; then
   ORK_BIN="$ORK_ROOT/$ORK_BIN"
fi

if [ ! -d "$ORK_ROOT" ]; then
   echo "$_executor: orkhideya: bad root: $ORK_ROOT" 1>&2
   return 1
fi

if [ ! -d "$ORK_ETC" ]; then
   echo "$_executor: orkhideya: bad config directory: $ORK_ETC" 1>&2
   return 1
fi

if [ ! -d "$ORK_INCLUDE" ]; then
   echo "$_executor: orkhideya: bad include directory: $ORK_INCLUDE" 1>&2
   return 1
fi

if [ ! -d "$ORK_BIN" ]; then
   echo "$_executor: orkhideya: bad bin directory: $ORK_BIN" 1>&2
   return 1
fi

# for e-z sourcing, we need to modify the path!
if [ -z "$(echo $PATH | grep ":$ORK_INCLUDE")" ]; then
   PATH="$PATH:$ORK_INCLUDE"
fi
